@model DoUongOnline.Models.KhachHang

@{
    ViewBag.Title = "RegisterUser";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*<style>
        .field-validation-error, .errorRegister {
            color: red;
        }

        .body-content {
            margin: 50px 40px 40px 0;
        }
    </style>*@

<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
@*<style>
        #gtco-header {
            background-size: cover;
            background-position: top center;
            background-repeat: no-repeat;
            position: relative;
        }

        .gtco-cover {
            height: 500px;
            background-size: cover;
            background-position: center center;
            background-repeat: no-repeat;
            position: relative;
            float: left;
            width: 100%;
        }

            .gtco-cover .overlay {
                z-index: 1;
                position: absolute;
                bottom: 0;
                top: 0;
                left: 0;
                right: 0;
                background: rgba(0, 0, 0, 0);
            }

            .gtco-cover > .gtco-container {
                position: relative;
                z-index: 10;
            }

        .gtco-container {
            max-width: 1100px;
            position: relative;
            margin: 0 auto;
            padding-left: 15px;
            padding-right: 15px;
        }

        body {
            margin: 0;
            font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
            font-size: 2rem;
            font-weight: 400;
            line-height: 1.5;
            color: #212529;
            text-align: left;
            background-color: #fff;
        }

        .card {
            position: relative;
            display: -ms-flexbox;
            display: flex;
            -ms-flex-direction: column;
            flex-direction: column;
            min-width: 0;
            word-wrap: break-word;
            background-color: #fff;
            background-clip: border-box;
            border: 1px solid rgba(0,0,0,.125);
            border-radius: .25rem;
        }

        .bg-dark {
            background-color: #343a40 !important;
        }

        body {
            overflow-x: hidden;
        }

        .ml-auto, .mx-auto {
            margin-left: auto !important;
        }

        .mr-auto, .mx-auto {
            margin-right: auto !important;
        }

        .mt-5, .my-5 {
            margin-top: 6rem !important;
        }

        .card-header {
            padding: .75rem 1.25rem;
            margin-bottom: 0;
            background-color: rgba(0,0,0,.03);
            border-bottom: 1px solid rgba(0,0,0,.125);
        }

            .card-header:first-child {
                border-radius: calc(.25rem - 1px) calc(.25rem - 1px) 0 0;
            }

        .card-body {
            -ms-flex: 1 1 auto;
            flex: 1 1 auto;
            padding: 1.25rem;
        }

        label {
            display: inline-block;
            margin-bottom: .5rem;
        }

        .card-login {
            max-width: 430px;
        }

        input {
            max-width: 400px;
        }

        .form-control {
            display: block;
            width: 1000px;
            padding: .375rem .75rem;
            font-size: 1.8rem;
            line-height: 1.5;
            color: #495057;
            background-color: #fff;
            background-image: none;
            background-clip: padding-box;
            border: 1px solid #ced4da;
            border-radius: .25rem;
            transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;
        }

        .container {
            max-width: 960px;
        }

        a {
            color: #FBB448;
            -webkit-transition: 0.5s;
            -o-transition: 0.5s;
            transition: 0.5s;
        }

            a:hover {
                color: #FBB448;
                background-color: transparent;
                text-decoration: underline;
            }
    </style>*@



@*<div id="gtco-header" class="gtco-cover gtco-cover-md">
        <div class="overlay"> </div>
        <div class="gtco-container">
            <div class="card card-login mx-auto mt-5">
                <div class="card-header">Đăng nhập</div>
                <div class="card-body">
                    @using (Html.BeginForm("RegisterUser", "Customer", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {

                        <div class="form-group">
                            <label for="inputEmail"><i class="fa fa-user"></i> Tên Khách Hàng</label>

                            @Html.TextBoxFor(model => model.TenKhachHang, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TenKhachHang, null, new { @style = "color:red" })
                        </div>

                        <div class="form-group">
                            <label for="inputEmail"><i class="fa fa-address-book"></i> Địa Chỉ</label>
                            @Html.TextBoxFor(model => model.DiaChi, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.DiaChi, null, new { @style = "color:red" })

                        </div>
                        <div class="form-group">
                            <label for="inputEmail"><i class="fa fa-phone-square"></i> Số Điện Thoại</label>

                            @Html.TextBoxFor(model => model.SDTKH, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.SDTKH, null, new { @style = "color:red" })
                        </div>

                        <div class="form-group">
                            <label for="inputEmail"><i class="fa fa-calendar"></i> Ngày Sinh</label><br />
                            @Html.TextBoxFor(model => model.NgaySinh, new { type = "date" })
                            @Html.ValidationMessageFor(model => model.NgaySinh, null, new { @style = "color:red" })

                        </div>
                        <div class="form-group">
                            <label for="inputEmail"><i class="material-icons">&#xe0be;</i> Email</label>

                            @Html.TextBoxFor(model => model.EmailKH, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.EmailKH, null, new { @style = "color:red" })
                        </div>

                        if (ViewBag.ErrorRegister != null)
                        {
                            <p class="errorRegister">@ViewBag.ErrorRegister</p>
                        }
                        <div class="form-group">
                            <label for="inputPassword"><i class="fa fa fa-lock"></i> Mật khẩu</label>
                            @Html.PasswordFor(model => model.MatKhau, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.MatKhau, null, new { @style = "color:red" })

                        </div>
                        <div class="form-group">
                            <label for="inputPassword"><i class="fa fa-lock"></i> Nhập Lại Mật Khẩu</label>

                            @Html.PasswordFor(model => model.ConfirmPass, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ConfirmPass, null, new { @style = "color:red" })
                        </div>


                        <input style="background-color:#fb8d17;color:white" type="submit" value="Register" />
                        <p>Bạn đã có tài khoản? <a href=@Url.Action("Login","Customer") class="register">Đăng nhập</a></p>
                    }
                </div>
            </div>
        </div>
    </div>*@

<style>
    .btn {
        font-family: 'Raleway', sans-serif;
        border-color: white;
    }

    .form-container {
        margin-top: 120px;
        margin-bottom: 50px;
        background: #fb8d17;
        font-family: 'Raleway', sans-serif;
        text-align: center;
        padding: 30px 20px 50px;
        border-radius: 5%;
    }

        .form-container .title {
            color: #fff;
            font-size: 23px;
            text-transform: capitalize;
            letter-spacing: 1px;
            margin: 0 0 60px;
        }

        .form-container .form-horizontal {
            background-color: #fff;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 20px rgba(0,0,0,0.4);
        }

    .form-horizontal .form-icon {
        color: #fb8d17;
        background-color: #1B394D;
        font-size: 75px;
        line-height: 92px;
        height: 90px;
        width: 90px;
        margin: -65px auto 10px;
        border-radius: 50%;
    }

    .form-horizontal .form-group {
        margin: 0 0 10px;
        position: relative;
    }

        .form-horizontal .form-group:nth-child(3) {
            margin-bottom: 30px;
        }

        .form-horizontal .form-group .input-icon {
            color: #000;
            font-size: 23px;
            position: absolute;
            left: 0;
            top: 5px;
        }

    .form-horizontal .form-control {
        color: #000;
        font-size: 16px;
        font-weight: 600;
        height: 50px;
        padding: 10px 10px 10px 40px;
        margin: 0 0 5px;
        border: none;
        border-bottom: 2px solid #e7e7e7;
        border-radius: 0px;
        box-shadow: none;
    }

        .form-horizontal .form-control:focus {
            box-shadow: none;
            border-bottom-color: #EC5F20;
        }

        .form-horizontal .form-control::placeholder {
            color: #000;
            font-size: 16px;
            font-weight: 600;
        }

    .form-horizontal .forgot {
        font-size: 13px;
        font-weight: 600;
        text-align: right;
        display: block;
    }

        .form-horizontal .forgot a {
            color: #fb8d17;
            transition: all 0.3s ease 0s;
        }

            .form-horizontal .forgot a:hover {
                color: #fb8d17;
                text-decoration: underline;
            }

    .form-horizontal .signin {
        color: #000;
        background-color: #EC5F20;
        font-size: 17px;
        text-transform: capitalize;
        letter-spacing: 2px;
        width: 100%;
        padding: 12px;
        box-shadow: 0 0 10px rgba(0,0,0,0.3);
        transition: all 0.4s ease 0s;
    }

    .form-horizontal .btn:hover,
    .form-horizontal .btn:focus {
        font-weight: 600;
        letter-spacing: 5px;
        box-shadow: 0 0 10px rgba(0,0,0,0.3) inset;
    }

    .fa-calendar {
        position: absolute;
        left: 0px;
        top: 0px;
    }
</style>

<div class="form-bg">
    <div class="container">
        <div class="row">
            <div class="col-md-offset-4 col-md-4 col-sm-offset-3 col-sm-6">
                <div class="form-container">
                    <h3 class="title">Đăng Ký</h3>
                    <div class="form-horizontal">
                        @using (Html.BeginForm("RegisterUser", "Customer", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            @*@Html.AntiForgeryToken()
                                @Html.ValidationSummary(true)*@
                            <div style="background-color:white" class="form-icon">
                                <i class="fa fa-user-circle"></i>
                            </div>
                            <div class="form-group">
                                <span class="input-icon"><i class="fa fa-user"></i></span>
                                @Html.TextBoxFor(model => model.TenKhachHang, new { @class = "form-control", @placeholder = "Họ tên" })
                                @Html.ValidationMessageFor(model => model.TenKhachHang, null, new { @style = "color:red" })
                                @*<input type="email" class="form-control" placeholder="Username">*@
                            </div>
                            <div class="form-group">
                                <span class="input-icon"><i class="fa fa-address-book"></i></span>
                                @Html.TextBoxFor(model => model.DiaChi, new { @class = "form-control", @placeholder = "Địa chỉ" })
                                @Html.ValidationMessageFor(model => model.DiaChi, null, new { @style = "color:red" })
                                @*<input type="email" class="form-control" placeholder="Username">*@
                            </div>
                            <div class="form-group">
                                <span class="input-icon"><i class="fa fa-phone-square"></i></span>
                                @Html.TextBoxFor(model => model.SDTKH, new { @class = "form-control", @placeholder = "Số điện thoại" })
                                @Html.ValidationMessageFor(model => model.SDTKH, null, new { @style = "color:red" })
                                @*<input type="email" class="form-control" placeholder="Username">*@
                            </div>
                            <div style="margin-right:40px" class="form-group">
                                <span class="input-icon"><i class="fa fa-calendar"></i></span>
                                @Html.TextBoxFor(model => model.NgaySinh, new { type = "date", @placeholder = "Ngày sinh" })
                                @Html.ValidationMessageFor(model => model.NgaySinh, null, new { @style = "color:red" })
                                @*<input type="email" class="form-control" placeholder="Username">*@
                            </div>
                            <div class="form-group">
                                <span class="input-icon"><i class="fa fa-chrome"></i></span>
                                @Html.TextBoxFor(model => model.EmailKH, new { @class = "form-control", @placeholder = "Email" })
                                @Html.ValidationMessageFor(model => model.EmailKH, null, new { @style = "color:red" })
                                @*<input type="email" class="form-control" placeholder="Username">*@
                            </div>
                            <div class="form-group">
                                <span class="input-icon"><i class="fa fa fa-lock"></i></span>
                                @Html.PasswordFor(model => model.MatKhau, new { @class = "form-control", @placeholder = "Mật khẩu" })
                                @Html.ValidationMessageFor(model => model.MatKhau, null, new { @style = "color:red" })
                                @*<input type="email" class="form-control" placeholder="Username">*@
                            </div>
                            <div class="form-group">
                                <span class="input-icon"><i class="fa fa-lock"></i></span>
                                @Html.PasswordFor(model => model.ConfirmPass, new { @class = "form-control", @placeholder = "Xác nhận mật khẩu" })
                                @Html.ValidationMessageFor(model => model.ConfirmPass, null, new { @style = "color:red" })

                                <span class="forgot">Bạn đã có tài khoản? <a href="@Url.Action("Login", "Customer")" class="register">Đăng Nhập</a></span>
                            </div>

                            <input style="font-size:2rem; background-color:#fb8d17;color:white" type="submit" value="Đăng Kí" class="btn btn-primary btn-block" />
                        }
                        <span style="font-size:30px;">
                            @ViewBag.Message
                        </span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src='https://www.google.com/recaptcha/api.js' type="text/javascript"></script>





@*<h2>RegisterUser</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>KhachHang</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.IdKH, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.IdKH, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IdKH, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EmailKH, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EmailKH, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmailKH, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MatKhau, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MatKhau, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MatKhau, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TenKhachHang, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TenKhachHang, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TenKhachHang, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NgaySinh, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NgaySinh, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NgaySinh, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SDTKH, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SDTKH, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SDTKH, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DiaChi, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DiaChi, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DiaChi, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NgayTaoTK, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NgayTaoTK, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NgayTaoTK, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DiemTichLuy, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DiemTichLuy, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DiemTichLuy, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TinhTrang, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.TinhTrang)
                        @Html.ValidationMessageFor(model => model.TinhTrang, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@